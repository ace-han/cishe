name: CI

on:
  - push

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        ports:
          - 3306
        env:
          MYSQL_USER: cishe
          MYSQL_PASSWORD: cishe
          # since github action for test only
          # we should make another file for other ci purpose
          MYSQL_DATABASE: test_cishe
          MYSQL_ROOT_PASSWORD: adminpwd
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.3
        with:
          create_virtualenvs: true

      - name: Cache Poetry virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cache/pypoetry/virtualenvs
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # - name: Set Poetry config
      #   run: |
      #     poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install --no-root
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        env:
          DJANGO_SETTINGS_MODULE: cishe.settings
          ENV_PATH: .env.github
        run: poetry run pytest --cov=. --cov-report=xml

      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: overall
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true

      - uses: actions/upload-artifact@v1
        with:
          name: pytest-results
          path: ./coverage.xml
        if: ${{ always() }}

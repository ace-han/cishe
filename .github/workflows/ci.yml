name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review]
  push:

jobs:
  test:
    runs-on: ubuntu-latest
    # refer to 
    # https://hugo.alliau.me/2021/05/04/migration-to-github-native-dependabot-solutions-for-auto-merge-and-action-secrets/#share-your-secrets-with-dependabot
    # If the PR is coming from a fork (pull_request_target), ensure it's opened by "dependabot[bot]".
    # Otherwise, clone it normally.
    if: |
        (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
        (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    services:
      mysql:
        image: mysql:latest
        ports:
          - 13306:3306
        env:
          MYSQL_USER: cishe
          MYSQL_PASSWORD: cishe
          # since github action for test only
          # we should make another file for other ci purpose
          MYSQL_DATABASE: test_cishe
          MYSQL_ROOT_PASSWORD: adminpwd
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
      - name: Checkout 
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v3.1.0

      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v3.1.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Python
        uses: actions/setup-python@v3.1.2
        with:
          python-version: 3.8

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.8
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path:
            .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      # - name: Set Poetry config
      #   run: |
      #     poetry config settings.virtualenvs.path ~/.virtualenvs

      - name: Install Dependencies
        run: poetry install --no-root
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        env:
          DJANGO_SETTINGS_MODULE: cishe.settings
          ENV_PATH: .env.github
        run: poetry run pytest --cov=. --cov-report=xml

      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: overall
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: true

      - uses: actions/upload-artifact@v3.1.0
        with:
          name: pytest-results
          path: ./coverage.xml
        if: ${{ always() }}

  auto_approve:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ github.actor == 'dependabot[bot]' }}
    steps:
      - uses: ahmadnassri/action-dependabot-auto-merge@v2
        with:
          github-token: ${{ secrets.DEPENDABOT_AUTOMERGE_TOKEN }}
